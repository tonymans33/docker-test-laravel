version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: 159914497254528/test-docker:latest
    container_name: test-docker
    restart: unless-stopped
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_KEY=base64:q19ahy227uBn451odBvwtk6WxYfPvXOUNn5VRuKH1IE=
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=test-docker
      - DB_USERNAME=root
      - DB_PASSWORD=rootpassword
      - APP_URL=http://localhost:5050
      - VITE_PORT=5173
      - ASSET_URL=http://localhost:5173
    volumes:
      - .:/var/www
      - /var/www/node_modules
      - /var/www/vendor
    networks:
      - app-network
    depends_on:
      - db

  node:
    image: node:latest
    container_name: node
    working_dir: /var/www
    volumes:
      - .:/var/www
      - /var/www/node_modules
    ports:
      - "5173:5173"
    networks:
      - app-network
    command: sh -c "npm install && npm run dev"

  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: test-docker
      MYSQL_USER: root
      MYSQL_PASSWORD: rootpassword
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "8080:80"
    networks:
      - app-network
    depends_on:
      - db

  webserver:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "5050:80"
    volumes:
      - .:/var/www
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network
    depends_on:
      - app

networks:
  app-network:
    driver: bridge

volumes:
  db-data: